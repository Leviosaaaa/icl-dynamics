#!/bin/bash

# This file reproduces all runs necessary to reproduce the figures in the main paper
# and some plots in the appendix

# File best viewed with word wrap

### Overarching params
SAVE_FOLDER="./ih_paper_reprod/main_paper_is5_ih3_pt2"
INIT_SEED=5

### Params for Main Paper Section 3
MAIN_RUN_ITERS=1000000

### Params for Main Paper Section 4
# This is the head that'll be active during clamp experiments
# It doesn't *have* to be the strongest one, but we did use 1:3 for the main paper,
# mainly since it learns fastest (and we didn't observe much variation from changing head)
STRONGEST_IH="1:3"
# String of the remaining heads in the second layer (used for ablating)
REST_HEADS="1:0 1:1 1:2 1:4 1:5 1:6 1:7"
# PT Head, used for clamping a single heads attention pattern
PT_HEAD="0:2"
# Though Figure 5 only requires 4e5 iters, we run for 6e5 since Appendix Figure 10 used that
CLAMP_ITERS=600000 

### Params for Main Paper Section 5
# We re-use the STRONGEST_IH from section 4
SCALING_ITERS=2000000
SCALING_CLAMP_ITERS=300000

# Make all runs not use date time

### Figure 3a, "main" run, no ablations
# To generate Figure 3b, induction strength progress measure, we need checkpoints
# Figure 4a generated from end of training checkpoint

python main.py --data_file omniglot_resnet18_randomized_order_s0.h5 --mixing_coeffs 1.0 --pt_burstiness 1 --train_context_len 2 --fs_relabel 5 --fs_relabel_split 8 2 0 --exemplar_split 1 4 0 --pe_names fsl_train fsl_val_rl fsl_train_valex fsl_test_class --pe_classes train train train test --pe_exemplars train train val train --pe_fs_relabel_scheme train val train train --pe_burstiness 1 1 1 1 --train_iters $MAIN_RUN_ITERS --train_bs 32 --eval_every 5000 --eval_iters 1000 --lr 0.00001 --d_model 64 --class_split 50 1473 100 --run omniglot50_rl5 --ckpt_every 1000 --init_seed $INIT_SEED --base_folder $SAVE_FOLDER --raw_name

### Figure 4b, individual head runs
python main.py --data_file omniglot_resnet18_randomized_order_s0.h5 --mixing_coeffs 1.0 --pt_burstiness 1 --train_context_len 2 --fs_relabel 5 --fs_relabel_split 8 2 0 --exemplar_split 1 4 0 --pe_names fsl_train fsl_val_rl fsl_train_valex fsl_test_class --pe_classes train train train test --pe_exemplars train train val train --pe_fs_relabel_scheme train val train train --pe_burstiness 1 1 1 1 --train_iters $MAIN_RUN_ITERS --train_bs 32 --eval_every 5000 --eval_iters 1000 --lr 0.00001 --d_model 64 --class_split 50 1473 100 --run omniglot50_rl5_only_l1h0 --ckpt_every $MAIN_RUN_ITERS --opto_ablate_heads 1:1 1:2 1:3 1:4 1:5 1:6 1:7 --init_seed $INIT_SEED --base_folder $SAVE_FOLDER --raw_name
python main.py --data_file omniglot_resnet18_randomized_order_s0.h5 --mixing_coeffs 1.0 --pt_burstiness 1 --train_context_len 2 --fs_relabel 5 --fs_relabel_split 8 2 0 --exemplar_split 1 4 0 --pe_names fsl_train fsl_val_rl fsl_train_valex fsl_test_class --pe_classes train train train test --pe_exemplars train train val train --pe_fs_relabel_scheme train val train train --pe_burstiness 1 1 1 1 --train_iters $MAIN_RUN_ITERS --train_bs 32 --eval_every 5000 --eval_iters 1000 --lr 0.00001 --d_model 64 --class_split 50 1473 100 --run omniglot50_rl5_only_l1h1 --ckpt_every $MAIN_RUN_ITERS --opto_ablate_heads 1:0 1:2 1:3 1:4 1:5 1:6 1:7 --init_seed $INIT_SEED --base_folder $SAVE_FOLDER --raw_name
python main.py --data_file omniglot_resnet18_randomized_order_s0.h5 --mixing_coeffs 1.0 --pt_burstiness 1 --train_context_len 2 --fs_relabel 5 --fs_relabel_split 8 2 0 --exemplar_split 1 4 0 --pe_names fsl_train fsl_val_rl fsl_train_valex fsl_test_class --pe_classes train train train test --pe_exemplars train train val train --pe_fs_relabel_scheme train val train train --pe_burstiness 1 1 1 1 --train_iters $MAIN_RUN_ITERS --train_bs 32 --eval_every 5000 --eval_iters 1000 --lr 0.00001 --d_model 64 --class_split 50 1473 100 --run omniglot50_rl5_only_l1h2 --ckpt_every $MAIN_RUN_ITERS --opto_ablate_heads 1:0 1:1 1:3 1:4 1:5 1:6 1:7 --init_seed $INIT_SEED --base_folder $SAVE_FOLDER --raw_name
python main.py --data_file omniglot_resnet18_randomized_order_s0.h5 --mixing_coeffs 1.0 --pt_burstiness 1 --train_context_len 2 --fs_relabel 5 --fs_relabel_split 8 2 0 --exemplar_split 1 4 0 --pe_names fsl_train fsl_val_rl fsl_train_valex fsl_test_class --pe_classes train train train test --pe_exemplars train train val train --pe_fs_relabel_scheme train val train train --pe_burstiness 1 1 1 1 --train_iters $MAIN_RUN_ITERS --train_bs 32 --eval_every 5000 --eval_iters 1000 --lr 0.00001 --d_model 64 --class_split 50 1473 100 --run omniglot50_rl5_only_l1h3 --ckpt_every $MAIN_RUN_ITERS --opto_ablate_heads 1:0 1:1 1:2 1:4 1:5 1:6 1:7 --init_seed $INIT_SEED --base_folder $SAVE_FOLDER --raw_name
python main.py --data_file omniglot_resnet18_randomized_order_s0.h5 --mixing_coeffs 1.0 --pt_burstiness 1 --train_context_len 2 --fs_relabel 5 --fs_relabel_split 8 2 0 --exemplar_split 1 4 0 --pe_names fsl_train fsl_val_rl fsl_train_valex fsl_test_class --pe_classes train train train test --pe_exemplars train train val train --pe_fs_relabel_scheme train val train train --pe_burstiness 1 1 1 1 --train_iters $MAIN_RUN_ITERS --train_bs 32 --eval_every 5000 --eval_iters 1000 --lr 0.00001 --d_model 64 --class_split 50 1473 100 --run omniglot50_rl5_only_l1h4 --ckpt_every $MAIN_RUN_ITERS --opto_ablate_heads 1:0 1:1 1:2 1:3 1:5 1:6 1:7 --init_seed $INIT_SEED --base_folder $SAVE_FOLDER --raw_name
python main.py --data_file omniglot_resnet18_randomized_order_s0.h5 --mixing_coeffs 1.0 --pt_burstiness 1 --train_context_len 2 --fs_relabel 5 --fs_relabel_split 8 2 0 --exemplar_split 1 4 0 --pe_names fsl_train fsl_val_rl fsl_train_valex fsl_test_class --pe_classes train train train test --pe_exemplars train train val train --pe_fs_relabel_scheme train val train train --pe_burstiness 1 1 1 1 --train_iters $MAIN_RUN_ITERS --train_bs 32 --eval_every 5000 --eval_iters 1000 --lr 0.00001 --d_model 64 --class_split 50 1473 100 --run omniglot50_rl5_only_l1h5 --ckpt_every $MAIN_RUN_ITERS --opto_ablate_heads 1:0 1:1 1:2 1:3 1:4 1:6 1:7 --init_seed $INIT_SEED --base_folder $SAVE_FOLDER --raw_name
python main.py --data_file omniglot_resnet18_randomized_order_s0.h5 --mixing_coeffs 1.0 --pt_burstiness 1 --train_context_len 2 --fs_relabel 5 --fs_relabel_split 8 2 0 --exemplar_split 1 4 0 --pe_names fsl_train fsl_val_rl fsl_train_valex fsl_test_class --pe_classes train train train test --pe_exemplars train train val train --pe_fs_relabel_scheme train val train train --pe_burstiness 1 1 1 1 --train_iters $MAIN_RUN_ITERS --train_bs 32 --eval_every 5000 --eval_iters 1000 --lr 0.00001 --d_model 64 --class_split 50 1473 100 --run omniglot50_rl5_only_l1h6 --ckpt_every $MAIN_RUN_ITERS --opto_ablate_heads 1:0 1:1 1:2 1:3 1:4 1:5 1:7 --init_seed $INIT_SEED --base_folder $SAVE_FOLDER --raw_name
python main.py --data_file omniglot_resnet18_randomized_order_s0.h5 --mixing_coeffs 1.0 --pt_burstiness 1 --train_context_len 2 --fs_relabel 5 --fs_relabel_split 8 2 0 --exemplar_split 1 4 0 --pe_names fsl_train fsl_val_rl fsl_train_valex fsl_test_class --pe_classes train train train test --pe_exemplars train train val train --pe_fs_relabel_scheme train val train train --pe_burstiness 1 1 1 1 --train_iters $MAIN_RUN_ITERS --train_bs 32 --eval_every 5000 --eval_iters 1000 --lr 0.00001 --d_model 64 --class_split 50 1473 100 --run omniglot50_rl5_only_l1h7 --ckpt_every $MAIN_RUN_ITERS --opto_ablate_heads 1:0 1:1 1:2 1:3 1:4 1:5 1:6 --init_seed $INIT_SEED --base_folder $SAVE_FOLDER --raw_name

### Figure 5a, toy model run
mkdir ${SAVE_FOLDER}/figures
python simple_model_solver.py --condition_clamp_c --only_loss --save ${SAVE_FOLDER}/figures/figure_5a.pdf

### Figure 5b, clamping experiments
# This is the minimal set to reproduce the main paper figure
# See appendix_runs.sh for the runs used for the Appendix D figures
# We also checked various other controls, feel free to reach out (aaditya.singh.21@ucl.ac.uk)
# if you have questions

# Note, these were done with only 1 head in L2 active -- the strongest one

# No clamp, get checkpoints to use for progress measures (Appendix Figure 10)
# Also evaluates more frequently for better resolution
# Run for 6e5 iterations since that was used for Figure 10
python main.py --data_file omniglot_resnet18_randomized_order_s0.h5 --mixing_coeffs 1.0 --pt_burstiness 1 --train_context_len 2 --fs_relabel 5 --fs_relabel_split 8 2 0 --exemplar_split 1 4 0 --pe_names fsl_train fsl_val_rl fsl_train_valex fsl_test_class --pe_classes train train train test --pe_exemplars train train val train --pe_fs_relabel_scheme train val train train --pe_burstiness 1 1 1 1 --train_iters $CLAMP_ITERS --train_bs 32 --eval_every 1000 --eval_iters 1000 --lr 0.00001 --d_model 64 --class_split 50 1473 100 --run omniglot50_rl5_noclamp --ckpt_every 1000 --opto_ablate_heads $REST_HEADS --init_seed $INIT_SEED --base_folder $SAVE_FOLDER --raw_name

# Clamp PT attention from a given head (head 2 for Figure 5b orange)
python main.py --data_file omniglot_resnet18_randomized_order_s0.h5 --mixing_coeffs 1.0 --pt_burstiness 1 --train_context_len 2 --fs_relabel 5 --fs_relabel_split 8 2 0 --exemplar_split 1 4 0 --pe_names fsl_train fsl_val_rl fsl_train_valex fsl_test_class --pe_classes train train train test --pe_exemplars train train val train --pe_fs_relabel_scheme train val train train --pe_burstiness 1 1 1 1 --train_iters $CLAMP_ITERS --train_bs 32 --eval_every 1000 --eval_iters 1000 --lr 0.00001 --d_model 64 --class_split 50 1473 100 --run omniglot50_rl5_perfect_prev_tok_attn_single --opto_prev_token_heads $PT_HEAD --opto_ablate_heads $REST_HEADS --init_seed $INIT_SEED --base_folder $SAVE_FOLDER --raw_name

# Clamp Layer 1 (using a different opto specific fn, Figure 5b red)
python main.py --data_file omniglot_resnet18_randomized_order_s0.h5 --mixing_coeffs 1.0 --pt_burstiness 1 --train_context_len 2 --fs_relabel 5 --fs_relabel_split 8 2 0 --exemplar_split 1 4 0 --pe_names fsl_train fsl_val_rl fsl_train_valex fsl_test_class --pe_classes train train train test --pe_exemplars train train val train --pe_fs_relabel_scheme train val train train --pe_burstiness 1 1 1 1 --train_iters $CLAMP_ITERS --train_bs 32 --eval_every 1000 --eval_iters 1000 --lr 0.00001 --d_model 64 --class_split 50 1473 100 --run omniglot50_rl5_perfect_l1 --opto_specific_fn perfect_prev_token_input --opto_ablate_heads $REST_HEADS --init_seed $INIT_SEED --base_folder $SAVE_FOLDER --raw_name

# Clamp match circuit (Figure 5b, green)
python main.py --data_file omniglot_resnet18_randomized_order_s0.h5 --mixing_coeffs 1.0 --pt_burstiness 1 --train_context_len 2 --fs_relabel 5 --fs_relabel_split 8 2 0 --exemplar_split 1 4 0 --pe_names fsl_train fsl_val_rl fsl_train_valex fsl_test_class --pe_classes train train train test --pe_exemplars train train val train --pe_fs_relabel_scheme train val train train --pe_burstiness 1 1 1 1 --train_iters $CLAMP_ITERS --train_bs 32 --eval_every 1000 --eval_iters 1000 --lr 0.00001 --d_model 64 --class_split 50 1473 100 --run omniglot50_rl5_perfect_match --opto_induction_heads $STRONGEST_IH --opto_ablate_heads $REST_HEADS --init_seed $INIT_SEED --base_folder $SAVE_FOLDER --raw_name

# Clamp copy circuit (Figure 5b, blue)
# No need to ablate heads here, since perfecting copy just propagates the attn logits to output
python main.py --data_file omniglot_resnet18_randomized_order_s0.h5 --mixing_coeffs 1.0 --pt_burstiness 1 --train_context_len 2 --fs_relabel 5 --fs_relabel_split 8 2 0 --exemplar_split 1 4 0 --pe_names fsl_train fsl_val_rl fsl_train_valex fsl_test_class --pe_classes train train train test --pe_exemplars train train val train --pe_fs_relabel_scheme train val train train --pe_burstiness 1 1 1 1 --train_iters $CLAMP_ITERS --train_bs 32 --eval_every 1000 --eval_iters 1000 --lr 0.00001 --d_model 64 --class_split 50 1473 100 --run omniglot50_rl5_perfect_copy --opto_perfect_copy_from_head_pattern $STRONGEST_IH --init_seed $INIT_SEED --base_folder $SAVE_FOLDER --raw_name

# Clamp copy + layer 1 (using a different opto specific fn, Figure 5b purple)
# No need to ablate heads here, since perfecting copy just propagates the attn logits to output
python main.py --data_file omniglot_resnet18_randomized_order_s0.h5 --mixing_coeffs 1.0 --pt_burstiness 1 --train_context_len 2 --fs_relabel 5 --fs_relabel_split 8 2 0 --exemplar_split 1 4 0 --pe_names fsl_train fsl_val_rl fsl_train_valex fsl_test_class --pe_classes train train train test --pe_exemplars train train val train --pe_fs_relabel_scheme train val train train --pe_burstiness 1 1 1 1 --train_iters $CLAMP_ITERS --train_bs 32 --eval_every 1000 --eval_iters 1000 --lr 0.00001 --d_model 64 --class_split 50 1473 100 --run omniglot50_rl5_perfect_l1_and_copy --opto_specific_fn perfect_prev_token_input --opto_perfect_copy_from_head_pattern $STRONGEST_IH --init_seed $INIT_SEED --base_folder $SAVE_FOLDER --raw_name


### Figure 6
# As we used clamping for subcircuits, we still restrict to just one head here

# Run original run for longer, no need for checkpoints
python main.py --data_file omniglot_resnet18_randomized_order_s0.h5 --mixing_coeffs 1.0 --pt_burstiness 1 --train_context_len 2 --fs_relabel 5 --fs_relabel_split 8 2 0 --exemplar_split 1 4 0 --pe_names fsl_train fsl_val_rl fsl_train_valex fsl_test_class --pe_classes train train train test --pe_exemplars train train val train --pe_fs_relabel_scheme train val train train --pe_burstiness 1 1 1 1 --train_iters $SCALING_ITERS --train_bs 32 --eval_every 5000 --eval_iters 1000 --lr 0.00001 --d_model 64 --class_split 50 1473 100 --run omniglot50_rl5_long --opto_ablate_heads $REST_HEADS --init_seed $INIT_SEED --base_folder $SAVE_FOLDER --raw_name

# Increase classes, no clamp
python main.py --data_file omniglot_resnet18_randomized_order_s0.h5 --mixing_coeffs 1.0 --pt_burstiness 1 --train_context_len 2 --fs_relabel 5 --fs_relabel_split 8 2 0 --exemplar_split 1 4 0 --pe_names fsl_train fsl_val_rl fsl_train_valex fsl_test_class --pe_classes train train train test --pe_exemplars train train val train --pe_fs_relabel_scheme train val train train --pe_burstiness 1 1 1 1 --train_iters $SCALING_ITERS --train_bs 32 --eval_every 5000 --eval_iters 1000 --lr 0.00001 --d_model 64 --class_split 100 1423 100 --run omniglot100_rl5_long --opto_ablate_heads $REST_HEADS --init_seed $INIT_SEED --base_folder $SAVE_FOLDER --raw_name
python main.py --data_file omniglot_resnet18_randomized_order_s0.h5 --mixing_coeffs 1.0 --pt_burstiness 1 --train_context_len 2 --fs_relabel 5 --fs_relabel_split 8 2 0 --exemplar_split 1 4 0 --pe_names fsl_train fsl_val_rl fsl_train_valex fsl_test_class --pe_classes train train train test --pe_exemplars train train val train --pe_fs_relabel_scheme train val train train --pe_burstiness 1 1 1 1 --train_iters $SCALING_ITERS --train_bs 32 --eval_every 5000 --eval_iters 1000 --lr 0.00001 --d_model 64 --class_split 200 1323 100 --run omniglot200_rl5_long --opto_ablate_heads $REST_HEADS --init_seed $INIT_SEED --base_folder $SAVE_FOLDER --raw_name

# Increase labels, no clamp
python main.py --data_file omniglot_resnet18_randomized_order_s0.h5 --mixing_coeffs 1.0 --pt_burstiness 1 --train_context_len 2 --fs_relabel 10 --fs_relabel_split 36 9 0 --exemplar_split 1 4 0 --pe_names fsl_train fsl_val_rl fsl_train_valex fsl_test_class --pe_classes train train train test --pe_exemplars train train val train --pe_fs_relabel_scheme train val train train --pe_burstiness 1 1 1 1 --train_iters $SCALING_ITERS --train_bs 32 --eval_every 5000 --eval_iters 1000 --lr 0.00001 --d_model 64 --class_split 50 1473 100 --run omniglot50_rl10_long --opto_ablate_heads $REST_HEADS --init_seed $INIT_SEED --base_folder $SAVE_FOLDER --raw_name
python main.py --data_file omniglot_resnet18_randomized_order_s0.h5 --mixing_coeffs 1.0 --pt_burstiness 1 --train_context_len 2 --fs_relabel 15 --fs_relabel_split 84 21 0 --exemplar_split 1 4 0 --pe_names fsl_train fsl_val_rl fsl_train_valex fsl_test_class --pe_classes train train train test --pe_exemplars train train val train --pe_fs_relabel_scheme train val train train --pe_burstiness 1 1 1 1 --train_iters $SCALING_ITERS --train_bs 32 --eval_every 5000 --eval_iters 1000 --lr 0.00001 --d_model 64 --class_split 50 1473 100 --run omniglot50_rl15_long --opto_ablate_heads $REST_HEADS --init_seed $INIT_SEED --base_folder $SAVE_FOLDER --raw_name

# Increase classes, subcircuit B evolution
python main.py --data_file omniglot_resnet18_randomized_order_s0.h5 --mixing_coeffs 1.0 --pt_burstiness 1 --train_context_len 2 --fs_relabel 5 --fs_relabel_split 8 2 0 --exemplar_split 1 4 0 --pe_names fsl_train fsl_val_rl fsl_train_valex fsl_test_class --pe_classes train train train test --pe_exemplars train train val train --pe_fs_relabel_scheme train val train train --pe_burstiness 1 1 1 1 --train_iters $SCALING_CLAMP_ITERS --train_bs 32 --eval_every 1000 --eval_iters 1000 --lr 0.00001 --d_model 64 --class_split 100 1423 100 --run omniglot100_rl5_perfect_l1_and_copy --opto_specific_fn perfect_prev_token_input --opto_perfect_copy_from_head_pattern $STRONGEST_IH --init_seed $INIT_SEED --base_folder $SAVE_FOLDER --raw_name
python main.py --data_file omniglot_resnet18_randomized_order_s0.h5 --mixing_coeffs 1.0 --pt_burstiness 1 --train_context_len 2 --fs_relabel 5 --fs_relabel_split 8 2 0 --exemplar_split 1 4 0 --pe_names fsl_train fsl_val_rl fsl_train_valex fsl_test_class --pe_classes train train train test --pe_exemplars train train val train --pe_fs_relabel_scheme train val train train --pe_burstiness 1 1 1 1 --train_iters $SCALING_CLAMP_ITERS --train_bs 32 --eval_every 1000 --eval_iters 1000 --lr 0.00001 --d_model 64 --class_split 200 1323 100 --run omniglot200_rl5_perfect_l1_and_copy --opto_specific_fn perfect_prev_token_input --opto_perfect_copy_from_head_pattern $STRONGEST_IH --init_seed $INIT_SEED --base_folder $SAVE_FOLDER --raw_name

# Increase labels, subcircuit B evolution
python main.py --data_file omniglot_resnet18_randomized_order_s0.h5 --mixing_coeffs 1.0 --pt_burstiness 1 --train_context_len 2 --fs_relabel 10 --fs_relabel_split 36 9 0 --exemplar_split 1 4 0 --pe_names fsl_train fsl_val_rl fsl_train_valex fsl_test_class --pe_classes train train train test --pe_exemplars train train val train --pe_fs_relabel_scheme train val train train --pe_burstiness 1 1 1 1 --train_iters $SCALING_CLAMP_ITERS --train_bs 32 --eval_every 1000 --eval_iters 1000 --lr 0.00001 --d_model 64 --class_split 50 1473 100 --run omniglot50_rl10_perfect_l1_and_copy --opto_specific_fn perfect_prev_token_input --opto_perfect_copy_from_head_pattern $STRONGEST_IH --init_seed $INIT_SEED --base_folder $SAVE_FOLDER --raw_name
python main.py --data_file omniglot_resnet18_randomized_order_s0.h5 --mixing_coeffs 1.0 --pt_burstiness 1 --train_context_len 2 --fs_relabel 15 --fs_relabel_split 84 21 0 --exemplar_split 1 4 0 --pe_names fsl_train fsl_val_rl fsl_train_valex fsl_test_class --pe_classes train train train test --pe_exemplars train train val train --pe_fs_relabel_scheme train val train train --pe_burstiness 1 1 1 1 --train_iters $SCALING_CLAMP_ITERS --train_bs 32 --eval_every 1000 --eval_iters 1000 --lr 0.00001 --d_model 64 --class_split 50 1473 100 --run omniglot50_rl15_perfect_l1_and_copy --opto_specific_fn perfect_prev_token_input --opto_perfect_copy_from_head_pattern $STRONGEST_IH --init_seed $INIT_SEED --base_folder $SAVE_FOLDER --raw_name

# Increase classes, subcircuit C evolution
python main.py --data_file omniglot_resnet18_randomized_order_s0.h5 --mixing_coeffs 1.0 --pt_burstiness 1 --train_context_len 2 --fs_relabel 5 --fs_relabel_split 8 2 0 --exemplar_split 1 4 0 --pe_names fsl_train fsl_val_rl fsl_train_valex fsl_test_class --pe_classes train train train test --pe_exemplars train train val train --pe_fs_relabel_scheme train val train train --pe_burstiness 1 1 1 1 --train_iters $SCALING_CLAMP_ITERS --train_bs 32 --eval_every 1000 --eval_iters 1000 --lr 0.00001 --d_model 64 --class_split 100 1423 100 --run omniglot100_rl5_perfect_match --opto_induction_heads $STRONGEST_IH --opto_ablate_heads $REST_HEADS --init_seed $INIT_SEED --base_folder $SAVE_FOLDER --raw_name
python main.py --data_file omniglot_resnet18_randomized_order_s0.h5 --mixing_coeffs 1.0 --pt_burstiness 1 --train_context_len 2 --fs_relabel 5 --fs_relabel_split 8 2 0 --exemplar_split 1 4 0 --pe_names fsl_train fsl_val_rl fsl_train_valex fsl_test_class --pe_classes train train train test --pe_exemplars train train val train --pe_fs_relabel_scheme train val train train --pe_burstiness 1 1 1 1 --train_iters $SCALING_CLAMP_ITERS --train_bs 32 --eval_every 1000 --eval_iters 1000 --lr 0.00001 --d_model 64 --class_split 200 1323 100 --run omniglot200_rl5_perfect_match --opto_induction_heads $STRONGEST_IH --opto_ablate_heads $REST_HEADS --init_seed $INIT_SEED --base_folder $SAVE_FOLDER --raw_name

# Increase labels, subcircuit C evolution
python main.py --data_file omniglot_resnet18_randomized_order_s0.h5 --mixing_coeffs 1.0 --pt_burstiness 1 --train_context_len 2 --fs_relabel 10 --fs_relabel_split 36 9 0 --exemplar_split 1 4 0 --pe_names fsl_train fsl_val_rl fsl_train_valex fsl_test_class --pe_classes train train train test --pe_exemplars train train val train --pe_fs_relabel_scheme train val train train --pe_burstiness 1 1 1 1 --train_iters $SCALING_CLAMP_ITERS --train_bs 32 --eval_every 1000 --eval_iters 1000 --lr 0.00001 --d_model 64 --class_split 50 1473 100 --run omniglot50_rl10_perfect_match --opto_induction_heads $STRONGEST_IH --opto_ablate_heads $REST_HEADS --init_seed $INIT_SEED --base_folder $SAVE_FOLDER --raw_name
python main.py --data_file omniglot_resnet18_randomized_order_s0.h5 --mixing_coeffs 1.0 --pt_burstiness 1 --train_context_len 2 --fs_relabel 15 --fs_relabel_split 84 21 0 --exemplar_split 1 4 0 --pe_names fsl_train fsl_val_rl fsl_train_valex fsl_test_class --pe_classes train train train test --pe_exemplars train train val train --pe_fs_relabel_scheme train val train train --pe_burstiness 1 1 1 1 --train_iters $SCALING_CLAMP_ITERS --train_bs 32 --eval_every 1000 --eval_iters 1000 --lr 0.00001 --d_model 64 --class_split 50 1473 100 --run omniglot50_rl15_perfect_match --opto_induction_heads $STRONGEST_IH --opto_ablate_heads $REST_HEADS --init_seed $INIT_SEED --base_folder $SAVE_FOLDER --raw_name

# Increase classes, subcircuit B, C evolution
python main.py --data_file omniglot_resnet18_randomized_order_s0.h5 --mixing_coeffs 1.0 --pt_burstiness 1 --train_context_len 2 --fs_relabel 5 --fs_relabel_split 8 2 0 --exemplar_split 1 4 0 --pe_names fsl_train fsl_val_rl fsl_train_valex fsl_test_class --pe_classes train train train test --pe_exemplars train train val train --pe_fs_relabel_scheme train val train train --pe_burstiness 1 1 1 1 --train_iters $SCALING_CLAMP_ITERS --train_bs 32 --eval_every 1000 --eval_iters 1000 --lr 0.00001 --d_model 64 --class_split 100 1423 100 --run omniglot100_rl5_perfect_l1 --opto_specific_fn perfect_prev_token_input --opto_ablate_heads $REST_HEADS --init_seed $INIT_SEED --base_folder $SAVE_FOLDER --raw_name
python main.py --data_file omniglot_resnet18_randomized_order_s0.h5 --mixing_coeffs 1.0 --pt_burstiness 1 --train_context_len 2 --fs_relabel 5 --fs_relabel_split 8 2 0 --exemplar_split 1 4 0 --pe_names fsl_train fsl_val_rl fsl_train_valex fsl_test_class --pe_classes train train train test --pe_exemplars train train val train --pe_fs_relabel_scheme train val train train --pe_burstiness 1 1 1 1 --train_iters $SCALING_CLAMP_ITERS --train_bs 32 --eval_every 1000 --eval_iters 1000 --lr 0.00001 --d_model 64 --class_split 200 1323 100 --run omniglot200_rl5_perfect_l1 --opto_specific_fn perfect_prev_token_input --opto_ablate_heads $REST_HEADS --init_seed $INIT_SEED --base_folder $SAVE_FOLDER --raw_name

# Increase labels, subcircuit B, C evolution
python main.py --data_file omniglot_resnet18_randomized_order_s0.h5 --mixing_coeffs 1.0 --pt_burstiness 1 --train_context_len 2 --fs_relabel 10 --fs_relabel_split 36 9 0 --exemplar_split 1 4 0 --pe_names fsl_train fsl_val_rl fsl_train_valex fsl_test_class --pe_classes train train train test --pe_exemplars train train val train --pe_fs_relabel_scheme train val train train --pe_burstiness 1 1 1 1 --train_iters $SCALING_CLAMP_ITERS --train_bs 32 --eval_every 1000 --eval_iters 1000 --lr 0.00001 --d_model 64 --class_split 50 1473 100 --run omniglot50_rl10_perfect_l1 --opto_specific_fn perfect_prev_token_input --opto_ablate_heads $REST_HEADS --init_seed $INIT_SEED --base_folder $SAVE_FOLDER --raw_name
python main.py --data_file omniglot_resnet18_randomized_order_s0.h5 --mixing_coeffs 1.0 --pt_burstiness 1 --train_context_len 2 --fs_relabel 15 --fs_relabel_split 84 21 0 --exemplar_split 1 4 0 --pe_names fsl_train fsl_val_rl fsl_train_valex fsl_test_class --pe_classes train train train test --pe_exemplars train train val train --pe_fs_relabel_scheme train val train train --pe_burstiness 1 1 1 1 --train_iters $SCALING_CLAMP_ITERS --train_bs 32 --eval_every 1000 --eval_iters 1000 --lr 0.00001 --d_model 64 --class_split 50 1473 100 --run omniglot50_rl15_perfect_l1 --opto_specific_fn perfect_prev_token_input --opto_ablate_heads $REST_HEADS --init_seed $INIT_SEED --base_folder $SAVE_FOLDER --raw_name
